/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/unicode-chars/portuguese.dtsi"

/ {
    combos {
        compatible = "zmk,combos";

        combo_vim_esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };
    };

    behaviors {
        holdtap_lgui_return: holdtap_lgui_return {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP_LGUI_RETURN";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        holdtap_moment_toogle: holdtap_moment_toogle {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP_MOMENT_TOOGLE";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        holdtap_kp_mo: holdtap_kp_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP_KP_MO";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };
    };

    macros {
        accent_e_macro: accent_e_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT &kp RSHFT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N3>,
                <&macro_release>,
                <&kp RSHIFT &kp RALT>;

            label = "ACCENT_E_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E             &kp R                             &kp T                     &kp Y          &kp U  &kp I            &kp O    &kp P              &kp GRAVE
&kp LEFT_ALT  &kp A  &kp S  &kp D             &kp F                             &kp G                     &kp H          &kp J  &kp K            &kp L    &kp DOUBLE_QUOTES  &kp SQT
&kp LSHIFT    &kp Z  &kp X  &kp C             &kp V                             &kp B                     &kp N          &kp M  &kp COMMA        &kp DOT  &kp SEMICOLON      &holdtap_kp_mo 3 SLASH
                            &kp LEFT_CONTROL  &holdtap_lgui_return LGUI RETURN  &holdtap_kp_mo 2 SPACE    &kp BACKSPACE  &mo 1  &kp RIGHT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp EXCLAMATION  &kp AT_SIGN       &kp HASH        &kp DOLLAR            &kp PERCENT     &kp CARET      &kp AMPERSAND          &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DELETE
&kp LEFT_CONTROL  &kp NUMBER_1     &kp NUMBER_2      &kp NUMBER_3    &kp NUMBER_4          &kp NUMBER_5    &kp NUMBER_6   &kp NUMBER_7           &kp NUMBER_8     &kp NUMBER_9          &kp NUMBER_0           &trans
&kp LSHFT         &kp UNDER        &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp MINUS       &kp EQUAL      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET     &kp PLUS               &kp TILDE
                                                     &trans          &trans                &kp SPACE       &kp BACKSPACE  &kp RIGHT_GUI          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH       &kp DLLR     &kp PRCNT    &kp CARET  &kp AMPS        &kp ASTRK     &kp LPAR         &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &kp HOME       &kp END      &trans       &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans    &trans
&kp LSHFT  &trans    &trans  &kp PAGE_DOWN  &kp PAGE_UP  &trans       &trans     &trans          &trans        &trans           &trans    &trans
                             &kp LGUI       &trans       &kp SPACE    &kp RET    &trans          &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans      &trans        &trans        &kp pt_e_acute        &trans        &trans          &trans  &trans  &trans    &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans    &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans    &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &kp RALT
            >;
        };
    };
};
